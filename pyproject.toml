[tool.poetry]
name = "PropHazard"
version = "0.1.0-dev1"
description = "A demonstrator project for a RotorHazard variant"
authors = ["Bryce Gruber <dev@brycegruber.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/i-am-grub/PropHazard"

[tool.poetry.dependencies]
python = "^3.11"
quart = "^0.19.9"
quart-auth = "^0.10.1"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.36"}
aiosqlite = "^0.20.0"
hypercorn = "^0.17.3"
uvloop = [
    {version = "^0.21.0", platform = "linux"}, 
    {version = "^0.21.0", platform = "darwin"}
]
winloop = {version = "^0.1.7", platform = "win32"}
httpx = "^0.28.0"
cryptography = "^44.0.0"
anyio = "^4.6.2.post1"
quart-tasks = "^0.2.2"
argon2-cffi = "^23.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
start-prophazard = "prophazard.__main__:main"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
black = "^24.10.0"
mypy = "^1.13.0"
tox = "^4.23.2"
tox-gh-actions = "^3.2.0"
pylint = "^3.3.2"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "*"
Sphinx-Substitution-Extensions = "*"
sphinx-copybutton = "*"

[tool.mypy]
exclude = ["tests"]

[tool.pytest.ini_options]
addopts = "--no-cov-on-fail --showlocals --strict-markers"
asyncio_default_fixture_loop_scope = "session"
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.pylint]
ignore = "tests"

[tool.tox]
requires = ["tox>=4"]
env_list = ["pylint", "black", "mypy", "3.13", "3.12", "3.11"]

[tool.tox.env_run_base]
description = "run unit tests"
deps = [
    "pytest>=8",
    "pytest-asyncio",
    "pytest-cov"
]
commands = [["pytest", {cov="src",  replace = "posargs", default = ["tests"], extend = true }]]

[tool.tox.env.style]
description = "run black"
skip_install = true
deps = ["black"]
commands = [["black", { replace = "posargs", default = ["."], extend = true} ]]

[tool.tox.env.mypy]
description = "run mypy"
deps = ["mypy"]
commands = [["mypy", { replace = "posargs", default = ["src"], extend = true} ]]

[tool.tox.env.pylint]
description = "run pylint"
deps = ["pylint"]
commands = [["pylint", "--recursive=y", { replace = "posargs", default = ["src"], extend = true} ]]